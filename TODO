# TODO

Cleanups that aren't important but help keep the style nice.

* reimplement token_list using 'array'
* reimplement symbol tables using 'array'
* search for FIXME and TODOs and try to fix any that are easy
* implement some assembler directives like .text and .data .file .line .global?
* print hexidecimal? 2,4,8,16 digits?
* comparison opcodes

1. after load, implement command line parsing
2. call repl debugger on fatal error?
3. breakpoints!
4. load binary program from file, save binary program to file
5. watchpoints (see if the value of an address changes?)
6. finish all integer instructions
7. finish fp instructions
8. comparisons?
9. mmx instructions?
10. all documented repl commands complete and tested?
11. tests -- feed in a repl script that uses the assembler
12. syscall (some can simply pass through to real syscall!)
13. performance measurements
14. implement more performant paged memory
15. make examine smarter (maybe do ASCII conversion on the right hand
    side)
16. make sure we can crash via fuzzing or something?
17. minmal language backend targeting comet-vm
18. compile_x86, compile_riscv, and compile_arm - take *assembly*
    syntax for these architectures and assemble to comet byte codes.
19. console mode for the debugger
